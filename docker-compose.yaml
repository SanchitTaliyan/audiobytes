version: "3.9"

services:
  backend:
    build: .
    image: audiobyte
    ports:
      - 4000:4000
    command: python run.py
    container_name: audiobyte_app
    volumes:
      - backend_logs:/data
    depends_on:
      - redis
    networks:
      - audiobyte_network
    restart: always

  redis:
    image: "redis:latest"
    container_name: audiobyte_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - audiobyte_network
    restart: always

  rabbitmq:
    build:
      context: ./rabbitmq
    container_name: audiobyte_rabbitmq
    ports:
      - 5672:5672
      - 8080:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - audiobyte_network
    restart: always

  celery_beat:
    build: .
    image: audiobyte
    container_name: audiobyte_celery_beat
    command: /venv/bin/celery -A proj beat
    volumes:
      - celery_data:/data
    networks:
      - audiobyte_network
    depends_on:
      - redis
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery beat' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  celery_worker:
    build: .
    image: audiobyte_app
    container_name: audiobyte_celery
    command: python celery_setup.py
    volumes:
      - celery_data:/data
    networks:
      - audiobyte_network
    depends_on:
      - redis
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "/venv/bin/celery -A proj inspect ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

volumes:
  redis_data:
  backend_logs:
  celery_data:
  rabbitmq_data:
  rabbitmq_log:
  restart_script:
    driver: local

networks:
  audiobyte_network:
    name: audiobyte_network
    driver: bridge
